// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameReply = "replies"

// Reply mapped from table <replies>
type Reply struct {
	ID        int64          `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt time.Time      `gorm:"column:created_at;not null;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt time.Time      `gorm:"column:updated_at;not null;default:CURRENT_TIMESTAMP" json:"updated_at"`
	CreatedBy int64          `gorm:"column:created_by;not null;comment:User ID" json:"created_by"`      // User ID
	UpdatedBy int64          `gorm:"column:updated_by;not null;comment:User ID" json:"updated_by"`      // User ID
	Version   int32          `gorm:"column:version;not null;comment:Optimistic locking" json:"version"` // Optimistic locking
	DeletedAt gorm.DeletedAt `gorm:"column:deleted_at;comment:Soft delete" json:"deleted_at"`           // Soft delete
	ReplyID   int64          `gorm:"column:reply_id;not null" json:"reply_id"`
	ReviewID  int64          `gorm:"column:review_id;not null" json:"review_id"`
	Content   string         `gorm:"column:content;not null" json:"content"`
	SellerID  int64          `gorm:"column:seller_id;not null" json:"seller_id"`
	Pictures  string         `gorm:"column:pictures;not null;default:[];comment:Reply pictures" json:"pictures"`        // Reply pictures
	Videos    string         `gorm:"column:videos;not null;default:[];comment:Reply videos" json:"videos"`              // Reply videos
	ExtJSON   string         `gorm:"column:ext_json;not null;default:{};comment:Extended information" json:"ext_json"`  // Extended information
	CtrlJSON  string         `gorm:"column:ctrl_json;not null;default:{};comment:Control information" json:"ctrl_json"` // Control information
}

// TableName Reply's table name
func (*Reply) TableName() string {
	return TableNameReply
}
